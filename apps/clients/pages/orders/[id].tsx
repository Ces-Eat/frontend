import {
  Button,
  Card,
  CardActions,
  CardContent,
  Container,
  Typography,
} from "@mui/material";
// import { useRouter } from "next/router";
import { toPng } from "html-to-image";
import Link from "next/link";
import s from "styles/Orders.module.scss";
import { useEffect, useRef, useState } from "react";
import CartSummary from "src/components/Cart";
import Head from "next/head";
import axios from "axios";
import { useRouter } from "next/router";

const OrderPage = () => {
  const router = useRouter();
  const invoiceRef = useRef(null);
  const { id } = router.query;
  const [order, setOrder] = useState([]);

  useEffect(() => {
    axios
      .get(`${process.env.API_ORDERS}/me?completed=false`, {
        withCredentials: true,
      })
      .then(({ data }) => {
        setOrder(data.find((o) => o._id === id));
      })
      .catch(() => {
        router.push("/orders");
      });
  }, []);

  const handleDownload = () => {
    if (invoiceRef?.current) {
      toPng(invoiceRef.current).then((dataUrl) => {
        const link = document.createElement("a");
        link.download = "Invoice.png";
        link.href = dataUrl;
        link.click();
      });
    }
  };

  return (
    <>
      <Head>
        <title>Clients - Commande</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Card className={s.container}>
        <Container ref={invoiceRef}>
          <CardContent>
            <Typography variant="h4" textAlign="center">
              Facture du 16/04/22
            </Typography>
            <Typography variant="nt">
              Chez &apos;Adresse de livrasion&apos; :
            </Typography>
            <br />
            <Typography variant="nt">Livré par :</Typography>
            <br />
            <Typography variant="nt">Fournis par :</Typography>
          </CardContent>
          <CardContent>
            <CartSummary {...order} restaurantId={order.restaurant._id} />
          </CardContent>
        </Container>
        <CardActions className={s.btnContainer}>
          <Link href="/orders">
            <Button variant="outlined" color="error">
              Retour
            </Button>
          </Link>
          <Button variant="outlined" color="primary" onClick={handleDownload}>
            Télécharger
          </Button>
        </CardActions>
      </Card>
    </>
  );
};

OrderPage.requireAuth = true;

export default OrderPage;

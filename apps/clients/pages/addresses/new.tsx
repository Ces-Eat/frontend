import { Button, Container } from "@mui/material";
import { addressSchema, IAddress } from "@ceseatslib/form";
import { Section } from "@ceseatslib/template";
import { SubmitHandler, useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import LoadingButton from "@mui/lab/LoadingButton";
import s from "styles/WalletsNew.module.scss";
import { useState } from "react";
import Link from "next/link";
import AddressForm from "src/forms/AddressForm/AddressForm";
import axios from "axios";
import { INotificationType, useNotificationCenter } from "@ceseatslib/utils";
import { useRouter } from "next/router";
import Head from "next/head";

const NewAddress = () => {
  const [isLoading, setIsLoading] = useState(false);
  const { createNotification } = useNotificationCenter();
  const router = useRouter();

  const methods = useForm<IAddress>({
    mode: "onChange",
    resolver: yupResolver(addressSchema),
  });

  const formSubmitHandler: SubmitHandler<IAddress> = (formData) => {
    setIsLoading(true);
    const refactorFormData = {
      designation: formData.designation,
      ...formData.address,
    };

    axios
      .post(`${process.env.API_ADDRESS}`, refactorFormData, {
        withCredentials: true,
      })
      .then(() => {
        createNotification(
          INotificationType.SUCCESS,
          "Adresse ajouté avec succès"
        );
        router.push("/addresses");
      })
      .catch(() => {
        createNotification(
          INotificationType.ERROR,
          "Erreur, veuillez réessayer plus tard"
        );
        setIsLoading(false);
      });
  };

  return (
    <>
      <Head>
        <title>Clients - Nouvelle adresse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Section title="Ajout d'une carte">
        <Container className={s.container}>
          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>
            <AddressForm methods={methods} />
            <Container className={s.middleContainer}>
              <Link href="/addresses">
                <Button
                  variant="outlined"
                  color="error"
                  className={s.middleItem}
                >
                  Retour
                </Button>
              </Link>
              <LoadingButton
                className={s.middleItem}
                type="submit"
                variant="outlined"
                color="primary"
                loading={isLoading}
                disabled={!methods.formState.isValid}
              >
                Ajouter
              </LoadingButton>
            </Container>
          </form>
        </Container>
      </Section>
    </>
  );
};

NewAddress.requireAuth = true;

export default NewAddress;
